name: Continuous Deployment (CD)

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

jobs:
  build:
    name: Cloud Run Deployment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@v0
        with:
          version: "latest"
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Build
        run: docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/product-service:latest .

      - name: Push
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/product-service:latest

      - name: Deploy to Staging
        if: github.ref == 'refs/heads/staging'
        run: |
          gcloud run deploy product-service-staging \
          --region europe-west1 \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/product-service:${{ github.sha }} \
          --platform managed \
          --allow-unauthenticated \
          --project ${{ secrets.GCP_PROJECT_ID }} \
          --set-env-vars SPRING_PROFILES_ACTIVE=staging \
          --set-env-vars JDBC_DATABASE_URL=${{ secrets.JDBC_DATABASE_URL }} \
          --set-env-vars JDBC_DATABASE_USERNAME=${{ secrets.JDBC_DATABASE_USERNAME }} \
          --set-env-vars JDBC_DATABASE_PASSWORD=${{ secrets.JDBC_DATABASE_PASSWORD }} \
          --quiet \
          --revision-suffix=$(date +%s)

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: |
          gcloud run deploy product-service \
          --region europe-west1 \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/product-service:latest \
          --platform managed \
          --allow-unauthenticated \
          --project ${{ secrets.GCP_PROJECT_ID }} \
          --set-env-vars SPRING_PROFILES_ACTIVE=prod \
          --set-env-vars JDBC_DATABASE_URL=${{ secrets.JDBC_DATABASE_URL }} \
          --set-env-vars JDBC_DATABASE_USERNAME=${{ secrets.JDBC_DATABASE_USERNAME }} \
          --set-env-vars JDBC_DATABASE_PASSWORD=${{ secrets.JDBC_DATABASE_PASSWORD }} \
          --quiet \
          --revision-suffix=$(date +%s)